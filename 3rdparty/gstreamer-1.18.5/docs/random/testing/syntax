The test program
----------------

We need a test program that:

  - can read a file with the test specs
  - construct a pipeline using the pipeline definition in the spec file
    (using gst_parse_launch ())
  - add signals to elements in the pipeline 
  - run the pipeline for a fixed (in time/number of iterations) period
  - record the fireing of the signals
  - compare the signals to the expected results.


spec file contents:
-------------------

tcN: name-of-the-tescase
tcP: pipeline of the testcase in gst_parse_launch () syntax.
tcS: id1, element, signalname (attach to signal in an element)
tcS: id2, element, signalname
...
tcI: the number of iterations on the top bin 
tcT: a timeout value in mSecs
tcR: id1,1,id2,1,.. (the pattern of signals triggered)
or 
tcR: id1==id2,... (denote an equal number of signals)
/n


signal trigger patterns
-----------------------





