# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/nvmem/xlnx,versal-sec-cfg.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Xilinx Secure Configuration driver binding

description: |
  The versal_sec_cfg node provides access to the BBRAM keys,
  BBRAM user data and volatile user keys by using the firmware interface.

maintainers:
  - Harsha <harshah@xilinx.com>

allOf:
  - $ref: "nvmem.yaml#"

properties:
  compatible:
    const: xlnx,versal-sec-cfg

  '#address-cells':
    const: 1

  '#size-cells':
    const: 1

patternProperties:
  "^bbram-zeroize@4$":
    type: object
    description:
      Initiates zeroization of BBRAM AES key. Write-only.

    properties:
      reg:
        maxItems: 1

    required:
      - reg

  "^bbram-key@10$":
    type: object
    description:
      256-bit BBRAM AES key. Write-only.

    properties:
      reg:
        maxItems: 1

    required:
      - reg

  "^bbram-usr@30$":
    type: object
    description:
      32-bit BBRAM user data space. Read and Write is supported.

    properties:
      reg:
        maxItems: 1

    required:
      - reg

  "^bbram-lock@48$":
    type: object
    description:
      Lock register for upper 32 bits of the BBRAM. Write-only

    properties:
      reg:
        maxItems: 1

    required:
      - reg

  "^user-key@1[1,3,5,7,9,b,d,f,B,D,F]0$":
    type: object
    description:
      Eight volatile user keys, Size can be 128-bits or 256-bits.
      All are write-only.

    properties:
      reg:
        maxItems: 1

    required:
      - reg

additionalProperties: false

examples:
  - |
    versal-sec-cfg {
      compatible = "xlnx,versal-sec-cfg";
      #address-cells = <1>;
      #size-cells = <1>;

      bbram_zeroize: bbram-zeroize@4 {
        reg = <0x4 0x4>;
      };

      bbram_key: bbram-key@10 {
        reg = <0x10 0x20>;
      };

      bbram_usr: bbram-usr@30 {
        reg = <0x30 0x4>;
      };

      bbram_lock: bbram-lock@48 {
        reg = <0x48 0x4>;
      };

      user_key0: user-key@110 {
        reg = <0x110 0x20>;
      };

      user_key1: user-key@130 {
        reg = <0x130 0x20>;
      };

      user_key2: user-key@150 {
        reg = <0x150 0x20>;
      };

      user_key3: user-key@170 {
        reg = <0x170 0x20>;
      };

      user_key4: user-key@190 {
       reg = <0x190 0x20>;
      };

      user_key5: user-key@1b0 {
        reg = <0x1b0 0x20>;
      };

      user_key6: user-key@1d0 {
        reg = <0x1d0 0x20>;
      };

      user_key7: user-key@1f0 {
        reg = <0x1f0 0x20>;
      };
    };

