CVPY_TYPE(Algorithm, Algorithm, Ptr<cv::Algorithm>, Ptr, NoBase, 0);
CVPY_TYPE(AsyncArray, AsyncArray, Ptr<cv::AsyncArray>, Ptr, NoBase, pyopencv_cv_AsyncArray_AsyncArray);
CVPY_TYPE(cuda_GpuMat, cuda_GpuMat, Ptr<cv::cuda::GpuMat>, Ptr, NoBase, pyopencv_cv_cuda_cuda_GpuMat_GpuMat);
CVPY_TYPE(cuda_GpuMat_Allocator, cuda_GpuMat_Allocator, Ptr<cv::cuda::GpuMat::Allocator>, Ptr, NoBase, 0);
CVPY_TYPE(cuda_GpuData, cuda_GpuData, Ptr<cv::cuda::GpuData>, Ptr, NoBase, 0);
CVPY_TYPE(cuda_GpuMatND, cuda_GpuMatND, Ptr<cv::cuda::GpuMatND>, Ptr, NoBase, 0);
CVPY_TYPE(cuda_BufferPool, cuda_BufferPool, Ptr<cv::cuda::BufferPool>, Ptr, NoBase, 0);
CVPY_TYPE(cuda_HostMem, cuda_HostMem, Ptr<cv::cuda::HostMem>, Ptr, NoBase, pyopencv_cv_cuda_cuda_HostMem_HostMem);
CVPY_TYPE(cuda_Stream, cuda_Stream, Ptr<cv::cuda::Stream>, Ptr, NoBase, pyopencv_cv_cuda_cuda_Stream_Stream);
CVPY_TYPE(cuda_Event, cuda_Event, Ptr<cv::cuda::Event>, Ptr, NoBase, pyopencv_cv_cuda_cuda_Event_Event);
CVPY_TYPE(cuda_TargetArchs, cuda_TargetArchs, Ptr<cv::cuda::TargetArchs>, Ptr, NoBase, 0);
CVPY_TYPE(cuda_DeviceInfo, cuda_DeviceInfo, Ptr<cv::cuda::DeviceInfo>, Ptr, NoBase, pyopencv_cv_cuda_cuda_DeviceInfo_DeviceInfo);
CVPY_TYPE(ocl_Device, ocl_Device, cv::ocl::Device, Device, NoBase, pyopencv_cv_ocl_ocl_Device_Device);
CVPY_TYPE(ocl_OpenCLExecutionContext, ocl_OpenCLExecutionContext, Ptr<cv::ocl::OpenCLExecutionContext>, Ptr, NoBase, 0);
CVPY_TYPE(FileStorage, FileStorage, Ptr<cv::FileStorage>, Ptr, NoBase, pyopencv_cv_FileStorage_FileStorage);
CVPY_TYPE(FileNode, FileNode, cv::FileNode, FileNode, NoBase, pyopencv_cv_FileNode_FileNode);
CVPY_TYPE(KeyPoint, KeyPoint, cv::KeyPoint, KeyPoint, NoBase, pyopencv_cv_KeyPoint_KeyPoint);
CVPY_TYPE(DMatch, DMatch, cv::DMatch, DMatch, NoBase, pyopencv_cv_DMatch_DMatch);
CVPY_TYPE(TickMeter, TickMeter, Ptr<cv::TickMeter>, Ptr, NoBase, pyopencv_cv_TickMeter_TickMeter);
CVPY_TYPE(UMat, UMat, Ptr<cv::UMat>, Ptr, NoBase, pyopencv_cv_UMat_UMat);
CVPY_TYPE(flann_Index, flann_Index, Ptr<cv::flann::Index>, Ptr, NoBase, pyopencv_cv_flann_flann_Index_Index);
CVPY_TYPE(GeneralizedHough, GeneralizedHough, Ptr<cv::GeneralizedHough>, Ptr, Algorithm, 0);
CVPY_TYPE(GeneralizedHoughBallard, GeneralizedHoughBallard, Ptr<cv::GeneralizedHoughBallard>, Ptr, GeneralizedHough, 0);
CVPY_TYPE(GeneralizedHoughGuil, GeneralizedHoughGuil, Ptr<cv::GeneralizedHoughGuil>, Ptr, GeneralizedHough, 0);
CVPY_TYPE(CLAHE, CLAHE, Ptr<cv::CLAHE>, Ptr, Algorithm, 0);
CVPY_TYPE(Subdiv2D, Subdiv2D, Ptr<cv::Subdiv2D>, Ptr, NoBase, pyopencv_cv_Subdiv2D_Subdiv2D);
CVPY_TYPE(LineSegmentDetector, LineSegmentDetector, Ptr<cv::LineSegmentDetector>, Ptr, Algorithm, 0);
CVPY_TYPE(segmentation_IntelligentScissorsMB, segmentation_IntelligentScissorsMB, cv::segmentation::IntelligentScissorsMB, IntelligentScissorsMB, NoBase, pyopencv_cv_segmentation_segmentation_IntelligentScissorsMB_IntelligentScissorsMB);
CVPY_TYPE(ml_ParamGrid, ml_ParamGrid, Ptr<cv::ml::ParamGrid>, Ptr, NoBase, 0);
CVPY_TYPE(ml_TrainData, ml_TrainData, Ptr<cv::ml::TrainData>, Ptr, NoBase, 0);
CVPY_TYPE(ml_StatModel, ml_StatModel, Ptr<cv::ml::StatModel>, Ptr, Algorithm, 0);
CVPY_TYPE(ml_NormalBayesClassifier, ml_NormalBayesClassifier, Ptr<cv::ml::NormalBayesClassifier>, Ptr, ml_StatModel, 0);
CVPY_TYPE(ml_KNearest, ml_KNearest, Ptr<cv::ml::KNearest>, Ptr, ml_StatModel, 0);
CVPY_TYPE(ml_SVM, ml_SVM, Ptr<cv::ml::SVM>, Ptr, ml_StatModel, 0);
CVPY_TYPE(ml_EM, ml_EM, Ptr<cv::ml::EM>, Ptr, ml_StatModel, 0);
CVPY_TYPE(ml_DTrees, ml_DTrees, Ptr<cv::ml::DTrees>, Ptr, ml_StatModel, 0);
CVPY_TYPE(ml_RTrees, ml_RTrees, Ptr<cv::ml::RTrees>, Ptr, ml_DTrees, 0);
CVPY_TYPE(ml_Boost, ml_Boost, Ptr<cv::ml::Boost>, Ptr, ml_DTrees, 0);
CVPY_TYPE(ml_ANN_MLP, ml_ANN_MLP, Ptr<cv::ml::ANN_MLP>, Ptr, ml_StatModel, 0);
CVPY_TYPE(ml_LogisticRegression, ml_LogisticRegression, Ptr<cv::ml::LogisticRegression>, Ptr, ml_StatModel, 0);
CVPY_TYPE(ml_SVMSGD, ml_SVMSGD, Ptr<cv::ml::SVMSGD>, Ptr, ml_StatModel, 0);
CVPY_TYPE(phase_unwrapping_HistogramPhaseUnwrapping, phase_unwrapping_HistogramPhaseUnwrapping, Ptr<cv::phase_unwrapping::HistogramPhaseUnwrapping>, Ptr, phase_unwrapping_PhaseUnwrapping, 0);
CVPY_TYPE(phase_unwrapping_HistogramPhaseUnwrapping_Params, phase_unwrapping_HistogramPhaseUnwrapping_Params, cv::phase_unwrapping::HistogramPhaseUnwrapping::Params, Params, NoBase, pyopencv_cv_phase_unwrapping_phase_unwrapping_HistogramPhaseUnwrapping_Params_HistogramPhaseUnwrapping_Params);
CVPY_TYPE(phase_unwrapping_PhaseUnwrapping, phase_unwrapping_PhaseUnwrapping, Ptr<cv::phase_unwrapping::PhaseUnwrapping>, Ptr, Algorithm, 0);
CVPY_TYPE(Tonemap, Tonemap, Ptr<cv::Tonemap>, Ptr, Algorithm, 0);
CVPY_TYPE(TonemapDrago, TonemapDrago, Ptr<cv::TonemapDrago>, Ptr, Tonemap, 0);
CVPY_TYPE(TonemapReinhard, TonemapReinhard, Ptr<cv::TonemapReinhard>, Ptr, Tonemap, 0);
CVPY_TYPE(TonemapMantiuk, TonemapMantiuk, Ptr<cv::TonemapMantiuk>, Ptr, Tonemap, 0);
CVPY_TYPE(AlignExposures, AlignExposures, Ptr<cv::AlignExposures>, Ptr, Algorithm, 0);
CVPY_TYPE(AlignMTB, AlignMTB, Ptr<cv::AlignMTB>, Ptr, AlignExposures, 0);
CVPY_TYPE(CalibrateCRF, CalibrateCRF, Ptr<cv::CalibrateCRF>, Ptr, Algorithm, 0);
CVPY_TYPE(CalibrateDebevec, CalibrateDebevec, Ptr<cv::CalibrateDebevec>, Ptr, CalibrateCRF, 0);
CVPY_TYPE(CalibrateRobertson, CalibrateRobertson, Ptr<cv::CalibrateRobertson>, Ptr, CalibrateCRF, 0);
CVPY_TYPE(MergeExposures, MergeExposures, Ptr<cv::MergeExposures>, Ptr, Algorithm, 0);
CVPY_TYPE(MergeDebevec, MergeDebevec, Ptr<cv::MergeDebevec>, Ptr, MergeExposures, 0);
CVPY_TYPE(MergeMertens, MergeMertens, Ptr<cv::MergeMertens>, Ptr, MergeExposures, 0);
CVPY_TYPE(MergeRobertson, MergeRobertson, Ptr<cv::MergeRobertson>, Ptr, MergeExposures, 0);
CVPY_TYPE(plot_Plot2d, plot_Plot2d, Ptr<cv::plot::Plot2d>, Ptr, Algorithm, 0);
CVPY_TYPE(quality_QualityBase, quality_QualityBase, Ptr<cv::quality::QualityBase>, Ptr, Algorithm, 0);
CVPY_TYPE(quality_QualityBRISQUE, quality_QualityBRISQUE, Ptr<cv::quality::QualityBRISQUE>, Ptr, quality_QualityBase, 0);
CVPY_TYPE(quality_QualityGMSD, quality_QualityGMSD, Ptr<cv::quality::QualityGMSD>, Ptr, quality_QualityBase, 0);
CVPY_TYPE(quality_QualityMSE, quality_QualityMSE, Ptr<cv::quality::QualityMSE>, Ptr, quality_QualityBase, 0);
CVPY_TYPE(quality_QualityPSNR, quality_QualityPSNR, Ptr<cv::quality::QualityPSNR>, Ptr, quality_QualityBase, 0);
CVPY_TYPE(quality_QualitySSIM, quality_QualitySSIM, Ptr<cv::quality::QualitySSIM>, Ptr, quality_QualityBase, 0);
CVPY_TYPE(reg_Map, reg_Map, Ptr<cv::reg::Map>, Ptr, NoBase, 0);
CVPY_TYPE(reg_MapAffine, reg_MapAffine, Ptr<cv::reg::MapAffine>, Ptr, reg_Map, pyopencv_cv_reg_reg_MapAffine_MapAffine);
CVPY_TYPE(reg_Mapper, reg_Mapper, Ptr<cv::reg::Mapper>, Ptr, NoBase, 0);
CVPY_TYPE(reg_MapperGradAffine, reg_MapperGradAffine, Ptr<cv::reg::MapperGradAffine>, Ptr, reg_Mapper, pyopencv_cv_reg_reg_MapperGradAffine_MapperGradAffine);
CVPY_TYPE(reg_MapperGradEuclid, reg_MapperGradEuclid, Ptr<cv::reg::MapperGradEuclid>, Ptr, reg_Mapper, pyopencv_cv_reg_reg_MapperGradEuclid_MapperGradEuclid);
CVPY_TYPE(reg_MapperGradProj, reg_MapperGradProj, Ptr<cv::reg::MapperGradProj>, Ptr, reg_Mapper, pyopencv_cv_reg_reg_MapperGradProj_MapperGradProj);
CVPY_TYPE(reg_MapperGradShift, reg_MapperGradShift, Ptr<cv::reg::MapperGradShift>, Ptr, reg_Mapper, pyopencv_cv_reg_reg_MapperGradShift_MapperGradShift);
CVPY_TYPE(reg_MapperGradSimilar, reg_MapperGradSimilar, Ptr<cv::reg::MapperGradSimilar>, Ptr, reg_Mapper, pyopencv_cv_reg_reg_MapperGradSimilar_MapperGradSimilar);
CVPY_TYPE(reg_MapperPyramid, reg_MapperPyramid, Ptr<cv::reg::MapperPyramid>, Ptr, reg_Mapper, pyopencv_cv_reg_reg_MapperPyramid_MapperPyramid);
CVPY_TYPE(reg_MapTypeCaster, reg_MapTypeCaster, Ptr<cv::reg::MapTypeCaster>, Ptr, NoBase, 0);
CVPY_TYPE(reg_MapProjec, reg_MapProjec, Ptr<cv::reg::MapProjec>, Ptr, reg_Map, pyopencv_cv_reg_reg_MapProjec_MapProjec);
CVPY_TYPE(reg_MapShift, reg_MapShift, Ptr<cv::reg::MapShift>, Ptr, reg_Map, pyopencv_cv_reg_reg_MapShift_MapShift);
CVPY_TYPE(ppf_match_3d_ICP, ppf_match_3d_ICP, Ptr<cv::ppf_match_3d::ICP>, Ptr, NoBase, pyopencv_cv_ppf_match_3d_ppf_match_3d_ICP_ICP);
CVPY_TYPE(ppf_match_3d_Pose3D, ppf_match_3d_Pose3D, Ptr<cv::ppf_match_3d::Pose3D>, Ptr, NoBase, pyopencv_cv_ppf_match_3d_ppf_match_3d_Pose3D_Pose3D);
CVPY_TYPE(ppf_match_3d_PoseCluster3D, ppf_match_3d_PoseCluster3D, Ptr<cv::ppf_match_3d::PoseCluster3D>, Ptr, NoBase, 0);
CVPY_TYPE(ppf_match_3d_PPF3DDetector, ppf_match_3d_PPF3DDetector, Ptr<cv::ppf_match_3d::PPF3DDetector>, Ptr, NoBase, pyopencv_cv_ppf_match_3d_ppf_match_3d_PPF3DDetector_PPF3DDetector);
CVPY_TYPE(xphoto_TonemapDurand, xphoto_TonemapDurand, Ptr<cv::xphoto::TonemapDurand>, Ptr, Tonemap, 0);
CVPY_TYPE(xphoto_WhiteBalancer, xphoto_WhiteBalancer, Ptr<cv::xphoto::WhiteBalancer>, Ptr, Algorithm, 0);
CVPY_TYPE(xphoto_SimpleWB, xphoto_SimpleWB, Ptr<cv::xphoto::SimpleWB>, Ptr, xphoto_WhiteBalancer, 0);
CVPY_TYPE(xphoto_GrayworldWB, xphoto_GrayworldWB, Ptr<cv::xphoto::GrayworldWB>, Ptr, xphoto_WhiteBalancer, 0);
CVPY_TYPE(xphoto_LearningBasedWB, xphoto_LearningBasedWB, Ptr<cv::xphoto::LearningBasedWB>, Ptr, xphoto_WhiteBalancer, 0);
CVPY_TYPE(Feature2D, Feature2D, Ptr<cv::Feature2D>, Ptr, NoBase, 0);
CVPY_TYPE(AffineFeature, AffineFeature, Ptr<cv::AffineFeature>, Ptr, Feature2D, 0);
CVPY_TYPE(SIFT, SIFT, Ptr<cv::SIFT>, Ptr, Feature2D, 0);
CVPY_TYPE(BRISK, BRISK, Ptr<cv::BRISK>, Ptr, Feature2D, 0);
CVPY_TYPE(ORB, ORB, Ptr<cv::ORB>, Ptr, Feature2D, 0);
CVPY_TYPE(MSER, MSER, Ptr<cv::MSER>, Ptr, Feature2D, 0);
CVPY_TYPE(FastFeatureDetector, FastFeatureDetector, Ptr<cv::FastFeatureDetector>, Ptr, Feature2D, 0);
CVPY_TYPE(AgastFeatureDetector, AgastFeatureDetector, Ptr<cv::AgastFeatureDetector>, Ptr, Feature2D, 0);
CVPY_TYPE(GFTTDetector, GFTTDetector, Ptr<cv::GFTTDetector>, Ptr, Feature2D, 0);
CVPY_TYPE(SimpleBlobDetector, SimpleBlobDetector, Ptr<cv::SimpleBlobDetector>, Ptr, Feature2D, 0);
CVPY_TYPE(SimpleBlobDetector_Params, SimpleBlobDetector_Params, cv::SimpleBlobDetector::Params, Params, NoBase, pyopencv_cv_SimpleBlobDetector_Params_SimpleBlobDetector_Params);
CVPY_TYPE(KAZE, KAZE, Ptr<cv::KAZE>, Ptr, Feature2D, 0);
CVPY_TYPE(AKAZE, AKAZE, Ptr<cv::AKAZE>, Ptr, Feature2D, 0);
CVPY_TYPE(DescriptorMatcher, DescriptorMatcher, Ptr<cv::DescriptorMatcher>, Ptr, Algorithm, 0);
CVPY_TYPE(BFMatcher, BFMatcher, Ptr<cv::BFMatcher>, Ptr, DescriptorMatcher, pyopencv_cv_BFMatcher_BFMatcher);
CVPY_TYPE(FlannBasedMatcher, FlannBasedMatcher, Ptr<cv::FlannBasedMatcher>, Ptr, DescriptorMatcher, pyopencv_cv_FlannBasedMatcher_FlannBasedMatcher);
CVPY_TYPE(BOWTrainer, BOWTrainer, Ptr<cv::BOWTrainer>, Ptr, NoBase, 0);
CVPY_TYPE(BOWKMeansTrainer, BOWKMeansTrainer, Ptr<cv::BOWKMeansTrainer>, Ptr, BOWTrainer, pyopencv_cv_BOWKMeansTrainer_BOWKMeansTrainer);
CVPY_TYPE(BOWImgDescriptorExtractor, BOWImgDescriptorExtractor, Ptr<cv::BOWImgDescriptorExtractor>, Ptr, NoBase, pyopencv_cv_BOWImgDescriptorExtractor_BOWImgDescriptorExtractor);
CVPY_TYPE(hfs_HfsSegment, hfs_HfsSegment, Ptr<cv::hfs::HfsSegment>, Ptr, Algorithm, 0);
CVPY_TYPE(img_hash_AverageHash, img_hash_AverageHash, Ptr<cv::img_hash::AverageHash>, Ptr, img_hash_ImgHashBase, 0);
CVPY_TYPE(img_hash_BlockMeanHash, img_hash_BlockMeanHash, Ptr<cv::img_hash::BlockMeanHash>, Ptr, img_hash_ImgHashBase, 0);
CVPY_TYPE(img_hash_ColorMomentHash, img_hash_ColorMomentHash, Ptr<cv::img_hash::ColorMomentHash>, Ptr, img_hash_ImgHashBase, 0);
CVPY_TYPE(img_hash_ImgHashBase, img_hash_ImgHashBase, Ptr<cv::img_hash::ImgHashBase>, Ptr, Algorithm, 0);
CVPY_TYPE(img_hash_MarrHildrethHash, img_hash_MarrHildrethHash, Ptr<cv::img_hash::MarrHildrethHash>, Ptr, img_hash_ImgHashBase, 0);
CVPY_TYPE(img_hash_PHash, img_hash_PHash, Ptr<cv::img_hash::PHash>, Ptr, img_hash_ImgHashBase, 0);
CVPY_TYPE(img_hash_RadialVarianceHash, img_hash_RadialVarianceHash, Ptr<cv::img_hash::RadialVarianceHash>, Ptr, img_hash_ImgHashBase, 0);
CVPY_TYPE(line_descriptor_KeyLine, line_descriptor_KeyLine, cv::line_descriptor::KeyLine, KeyLine, NoBase, pyopencv_cv_line_descriptor_line_descriptor_KeyLine_KeyLine);
CVPY_TYPE(line_descriptor_BinaryDescriptor, line_descriptor_BinaryDescriptor, Ptr<cv::line_descriptor::BinaryDescriptor>, Ptr, Algorithm, 0);
CVPY_TYPE(line_descriptor_LSDParam, line_descriptor_LSDParam, cv::line_descriptor::LSDParam, LSDParam, NoBase, pyopencv_cv_line_descriptor_line_descriptor_LSDParam_LSDParam);
CVPY_TYPE(line_descriptor_LSDDetector, line_descriptor_LSDDetector, Ptr<cv::line_descriptor::LSDDetector>, Ptr, Algorithm, pyopencv_cv_line_descriptor_line_descriptor_LSDDetector_LSDDetectorWithParams);
CVPY_TYPE(line_descriptor_BinaryDescriptorMatcher, line_descriptor_BinaryDescriptorMatcher, Ptr<cv::line_descriptor::BinaryDescriptorMatcher>, Ptr, Algorithm, pyopencv_cv_line_descriptor_line_descriptor_BinaryDescriptorMatcher_BinaryDescriptorMatcher);
CVPY_TYPE(line_descriptor_DrawLinesMatchesFlags, line_descriptor_DrawLinesMatchesFlags, cv::line_descriptor::DrawLinesMatchesFlags, DrawLinesMatchesFlags, NoBase, 0);
CVPY_TYPE(saliency_Saliency, saliency_Saliency, Ptr<cv::saliency::Saliency>, Ptr, Algorithm, 0);
CVPY_TYPE(saliency_StaticSaliency, saliency_StaticSaliency, Ptr<cv::saliency::StaticSaliency>, Ptr, saliency_Saliency, 0);
CVPY_TYPE(saliency_MotionSaliency, saliency_MotionSaliency, Ptr<cv::saliency::MotionSaliency>, Ptr, saliency_Saliency, 0);
CVPY_TYPE(saliency_Objectness, saliency_Objectness, Ptr<cv::saliency::Objectness>, Ptr, saliency_Saliency, 0);
CVPY_TYPE(saliency_StaticSaliencySpectralResidual, saliency_StaticSaliencySpectralResidual, Ptr<cv::saliency::StaticSaliencySpectralResidual>, Ptr, saliency_StaticSaliency, 0);
CVPY_TYPE(saliency_StaticSaliencyFineGrained, saliency_StaticSaliencyFineGrained, Ptr<cv::saliency::StaticSaliencyFineGrained>, Ptr, saliency_StaticSaliency, 0);
CVPY_TYPE(saliency_MotionSaliencyBinWangApr2014, saliency_MotionSaliencyBinWangApr2014, Ptr<cv::saliency::MotionSaliencyBinWangApr2014>, Ptr, saliency_MotionSaliency, 0);
CVPY_TYPE(saliency_ObjectnessBING, saliency_ObjectnessBING, Ptr<cv::saliency::ObjectnessBING>, Ptr, saliency_Objectness, 0);
CVPY_TYPE(VideoCapture, VideoCapture, Ptr<cv::VideoCapture>, Ptr, NoBase, pyopencv_cv_VideoCapture_VideoCapture);
CVPY_TYPE(VideoWriter, VideoWriter, Ptr<cv::VideoWriter>, Ptr, NoBase, pyopencv_cv_VideoWriter_VideoWriter);
CVPY_TYPE(UsacParams, UsacParams, cv::UsacParams, UsacParams, NoBase, pyopencv_cv_UsacParams_UsacParams);
CVPY_TYPE(CirclesGridFinderParameters, CirclesGridFinderParameters, cv::CirclesGridFinderParameters, CirclesGridFinderParameters, NoBase, pyopencv_cv_CirclesGridFinderParameters_CirclesGridFinderParameters);
CVPY_TYPE(StereoMatcher, StereoMatcher, Ptr<cv::StereoMatcher>, Ptr, Algorithm, 0);
CVPY_TYPE(StereoBM, StereoBM, Ptr<cv::StereoBM>, Ptr, StereoMatcher, 0);
CVPY_TYPE(StereoSGBM, StereoSGBM, Ptr<cv::StereoSGBM>, Ptr, StereoMatcher, 0);
CVPY_TYPE(BaseCascadeClassifier, BaseCascadeClassifier, Ptr<cv::BaseCascadeClassifier>, Ptr, Algorithm, 0);
CVPY_TYPE(CascadeClassifier, CascadeClassifier, Ptr<cv::CascadeClassifier>, Ptr, NoBase, pyopencv_cv_CascadeClassifier_CascadeClassifier);
CVPY_TYPE(HOGDescriptor, HOGDescriptor, Ptr<cv::HOGDescriptor>, Ptr, NoBase, pyopencv_cv_HOGDescriptor_HOGDescriptor);
CVPY_TYPE(QRCodeDetector, QRCodeDetector, Ptr<cv::QRCodeDetector>, Ptr, NoBase, pyopencv_cv_QRCodeDetector_QRCodeDetector);
CVPY_TYPE(rapid_Tracker, rapid_Tracker, Ptr<cv::rapid::Tracker>, Ptr, Algorithm, 0);
CVPY_TYPE(rapid_Rapid, rapid_Rapid, Ptr<cv::rapid::Rapid>, Ptr, rapid_Tracker, 0);
CVPY_TYPE(rapid_OLSTracker, rapid_OLSTracker, Ptr<cv::rapid::OLSTracker>, Ptr, rapid_Tracker, 0);
CVPY_TYPE(rgbd_RgbdNormals, rgbd_RgbdNormals, Ptr<cv::rgbd::RgbdNormals>, Ptr, Algorithm, 0);
CVPY_TYPE(rgbd_DepthCleaner, rgbd_DepthCleaner, Ptr<cv::rgbd::DepthCleaner>, Ptr, Algorithm, 0);
CVPY_TYPE(rgbd_RgbdPlane, rgbd_RgbdPlane, Ptr<cv::rgbd::RgbdPlane>, Ptr, Algorithm, 0);
CVPY_TYPE(rgbd_RgbdFrame, rgbd_RgbdFrame, Ptr<cv::rgbd::RgbdFrame>, Ptr, NoBase, 0);
CVPY_TYPE(rgbd_OdometryFrame, rgbd_OdometryFrame, Ptr<cv::rgbd::OdometryFrame>, Ptr, rgbd_RgbdFrame, 0);
CVPY_TYPE(rgbd_Odometry, rgbd_Odometry, Ptr<cv::rgbd::Odometry>, Ptr, Algorithm, 0);
CVPY_TYPE(rgbd_RgbdOdometry, rgbd_RgbdOdometry, Ptr<cv::rgbd::RgbdOdometry>, Ptr, rgbd_Odometry, 0);
CVPY_TYPE(rgbd_ICPOdometry, rgbd_ICPOdometry, Ptr<cv::rgbd::ICPOdometry>, Ptr, rgbd_Odometry, 0);
CVPY_TYPE(rgbd_RgbdICPOdometry, rgbd_RgbdICPOdometry, Ptr<cv::rgbd::RgbdICPOdometry>, Ptr, rgbd_Odometry, 0);
CVPY_TYPE(rgbd_FastICPOdometry, rgbd_FastICPOdometry, Ptr<cv::rgbd::FastICPOdometry>, Ptr, rgbd_Odometry, 0);
CVPY_TYPE(kinfu_detail_PoseGraph, kinfu_detail_PoseGraph, Ptr<cv::kinfu::detail::PoseGraph>, Ptr, NoBase, 0);
CVPY_TYPE(dynafu_DynaFu, dynafu_DynaFu, Ptr<cv::dynafu::DynaFu>, Ptr, NoBase, 0);
CVPY_TYPE(kinfu_Params, kinfu_Params, Ptr<cv::kinfu::Params>, Ptr, NoBase, pyopencv_cv_kinfu_kinfu_Params_Params);
CVPY_TYPE(kinfu_KinFu, kinfu_KinFu, Ptr<cv::kinfu::KinFu>, Ptr, NoBase, 0);
CVPY_TYPE(large_kinfu_Params, large_kinfu_Params, Ptr<cv::large_kinfu::Params>, Ptr, NoBase, 0);
CVPY_TYPE(large_kinfu_LargeKinfu, large_kinfu_LargeKinfu, Ptr<cv::large_kinfu::LargeKinfu>, Ptr, NoBase, 0);
CVPY_TYPE(linemod_Feature, linemod_Feature, cv::linemod::Feature, Feature, NoBase, pyopencv_cv_linemod_linemod_Feature_Feature);
CVPY_TYPE(linemod_Template, linemod_Template, cv::linemod::Template, Template, NoBase, 0);
CVPY_TYPE(linemod_QuantizedPyramid, linemod_QuantizedPyramid, Ptr<cv::linemod::QuantizedPyramid>, Ptr, NoBase, 0);
CVPY_TYPE(linemod_Modality, linemod_Modality, Ptr<cv::linemod::Modality>, Ptr, NoBase, 0);
CVPY_TYPE(linemod_ColorGradient, linemod_ColorGradient, Ptr<cv::linemod::ColorGradient>, Ptr, linemod_Modality, 0);
CVPY_TYPE(linemod_DepthNormal, linemod_DepthNormal, Ptr<cv::linemod::DepthNormal>, Ptr, linemod_Modality, 0);
CVPY_TYPE(linemod_Match, linemod_Match, cv::linemod::Match, Match, NoBase, pyopencv_cv_linemod_linemod_Match_Match);
CVPY_TYPE(linemod_Detector, linemod_Detector, Ptr<cv::linemod::Detector>, Ptr, NoBase, pyopencv_cv_linemod_linemod_Detector_Detector);
CVPY_TYPE(kinfu_Volume, kinfu_Volume, Ptr<cv::kinfu::Volume>, Ptr, NoBase, 0);
CVPY_TYPE(kinfu_VolumeParams, kinfu_VolumeParams, Ptr<cv::kinfu::VolumeParams>, Ptr, NoBase, 0);
CVPY_TYPE(HistogramCostExtractor, HistogramCostExtractor, Ptr<cv::HistogramCostExtractor>, Ptr, Algorithm, 0);
CVPY_TYPE(NormHistogramCostExtractor, NormHistogramCostExtractor, Ptr<cv::NormHistogramCostExtractor>, Ptr, HistogramCostExtractor, 0);
CVPY_TYPE(EMDHistogramCostExtractor, EMDHistogramCostExtractor, Ptr<cv::EMDHistogramCostExtractor>, Ptr, HistogramCostExtractor, 0);
CVPY_TYPE(ChiHistogramCostExtractor, ChiHistogramCostExtractor, Ptr<cv::ChiHistogramCostExtractor>, Ptr, HistogramCostExtractor, 0);
CVPY_TYPE(EMDL1HistogramCostExtractor, EMDL1HistogramCostExtractor, Ptr<cv::EMDL1HistogramCostExtractor>, Ptr, HistogramCostExtractor, 0);
CVPY_TYPE(ShapeDistanceExtractor, ShapeDistanceExtractor, Ptr<cv::ShapeDistanceExtractor>, Ptr, Algorithm, 0);
CVPY_TYPE(ShapeContextDistanceExtractor, ShapeContextDistanceExtractor, Ptr<cv::ShapeContextDistanceExtractor>, Ptr, ShapeDistanceExtractor, 0);
CVPY_TYPE(HausdorffDistanceExtractor, HausdorffDistanceExtractor, Ptr<cv::HausdorffDistanceExtractor>, Ptr, ShapeDistanceExtractor, 0);
CVPY_TYPE(ShapeTransformer, ShapeTransformer, Ptr<cv::ShapeTransformer>, Ptr, Algorithm, 0);
CVPY_TYPE(ThinPlateSplineShapeTransformer, ThinPlateSplineShapeTransformer, Ptr<cv::ThinPlateSplineShapeTransformer>, Ptr, ShapeTransformer, 0);
CVPY_TYPE(AffineTransformer, AffineTransformer, Ptr<cv::AffineTransformer>, Ptr, ShapeTransformer, 0);
CVPY_TYPE(structured_light_GrayCodePattern, structured_light_GrayCodePattern, Ptr<cv::structured_light::GrayCodePattern>, Ptr, structured_light_StructuredLightPattern, 0);
CVPY_TYPE(structured_light_SinusoidalPattern, structured_light_SinusoidalPattern, Ptr<cv::structured_light::SinusoidalPattern>, Ptr, structured_light_StructuredLightPattern, 0);
CVPY_TYPE(structured_light_SinusoidalPattern_Params, structured_light_SinusoidalPattern_Params, Ptr<cv::structured_light::SinusoidalPattern::Params>, Ptr, NoBase, pyopencv_cv_structured_light_structured_light_SinusoidalPattern_Params_SinusoidalPattern_Params);
CVPY_TYPE(structured_light_StructuredLightPattern, structured_light_StructuredLightPattern, Ptr<cv::structured_light::StructuredLightPattern>, Ptr, Algorithm, 0);
CVPY_TYPE(BackgroundSubtractor, BackgroundSubtractor, Ptr<cv::BackgroundSubtractor>, Ptr, Algorithm, 0);
CVPY_TYPE(BackgroundSubtractorMOG2, BackgroundSubtractorMOG2, Ptr<cv::BackgroundSubtractorMOG2>, Ptr, BackgroundSubtractor, 0);
CVPY_TYPE(BackgroundSubtractorKNN, BackgroundSubtractorKNN, Ptr<cv::BackgroundSubtractorKNN>, Ptr, BackgroundSubtractor, 0);
CVPY_TYPE(KalmanFilter, KalmanFilter, Ptr<cv::KalmanFilter>, Ptr, NoBase, pyopencv_cv_KalmanFilter_KalmanFilter);
CVPY_TYPE(DenseOpticalFlow, DenseOpticalFlow, Ptr<cv::DenseOpticalFlow>, Ptr, Algorithm, 0);
CVPY_TYPE(SparseOpticalFlow, SparseOpticalFlow, Ptr<cv::SparseOpticalFlow>, Ptr, Algorithm, 0);
CVPY_TYPE(FarnebackOpticalFlow, FarnebackOpticalFlow, Ptr<cv::FarnebackOpticalFlow>, Ptr, DenseOpticalFlow, 0);
CVPY_TYPE(VariationalRefinement, VariationalRefinement, Ptr<cv::VariationalRefinement>, Ptr, DenseOpticalFlow, 0);
CVPY_TYPE(DISOpticalFlow, DISOpticalFlow, Ptr<cv::DISOpticalFlow>, Ptr, DenseOpticalFlow, 0);
CVPY_TYPE(SparsePyrLKOpticalFlow, SparsePyrLKOpticalFlow, Ptr<cv::SparsePyrLKOpticalFlow>, Ptr, SparseOpticalFlow, 0);
CVPY_TYPE(Tracker, Tracker, Ptr<cv::Tracker>, Ptr, NoBase, 0);
CVPY_TYPE(TrackerMIL, TrackerMIL, Ptr<cv::TrackerMIL>, Ptr, Tracker, 0);
CVPY_TYPE(TrackerMIL_Params, TrackerMIL_Params, cv::TrackerMIL::Params, Params, NoBase, pyopencv_cv_TrackerMIL_Params_TrackerMIL_Params);
CVPY_TYPE(TrackerGOTURN, TrackerGOTURN, Ptr<cv::TrackerGOTURN>, Ptr, Tracker, 0);
CVPY_TYPE(TrackerGOTURN_Params, TrackerGOTURN_Params, cv::TrackerGOTURN::Params, Params, NoBase, pyopencv_cv_TrackerGOTURN_Params_TrackerGOTURN_Params);
CVPY_TYPE(xfeatures2d_FREAK, xfeatures2d_FREAK, Ptr<cv::xfeatures2d::FREAK>, Ptr, Feature2D, 0);
CVPY_TYPE(xfeatures2d_StarDetector, xfeatures2d_StarDetector, Ptr<cv::xfeatures2d::StarDetector>, Ptr, Feature2D, 0);
CVPY_TYPE(xfeatures2d_BriefDescriptorExtractor, xfeatures2d_BriefDescriptorExtractor, Ptr<cv::xfeatures2d::BriefDescriptorExtractor>, Ptr, Feature2D, 0);
CVPY_TYPE(xfeatures2d_LUCID, xfeatures2d_LUCID, Ptr<cv::xfeatures2d::LUCID>, Ptr, Feature2D, 0);
CVPY_TYPE(xfeatures2d_LATCH, xfeatures2d_LATCH, Ptr<cv::xfeatures2d::LATCH>, Ptr, Feature2D, 0);
CVPY_TYPE(xfeatures2d_BEBLID, xfeatures2d_BEBLID, Ptr<cv::xfeatures2d::BEBLID>, Ptr, Feature2D, 0);
CVPY_TYPE(xfeatures2d_DAISY, xfeatures2d_DAISY, Ptr<cv::xfeatures2d::DAISY>, Ptr, Feature2D, 0);
CVPY_TYPE(xfeatures2d_MSDDetector, xfeatures2d_MSDDetector, Ptr<cv::xfeatures2d::MSDDetector>, Ptr, Feature2D, 0);
CVPY_TYPE(xfeatures2d_VGG, xfeatures2d_VGG, Ptr<cv::xfeatures2d::VGG>, Ptr, Feature2D, 0);
CVPY_TYPE(xfeatures2d_BoostDesc, xfeatures2d_BoostDesc, Ptr<cv::xfeatures2d::BoostDesc>, Ptr, Feature2D, 0);
CVPY_TYPE(xfeatures2d_PCTSignatures, xfeatures2d_PCTSignatures, Ptr<cv::xfeatures2d::PCTSignatures>, Ptr, Algorithm, 0);
CVPY_TYPE(xfeatures2d_PCTSignaturesSQFD, xfeatures2d_PCTSignaturesSQFD, Ptr<cv::xfeatures2d::PCTSignaturesSQFD>, Ptr, Algorithm, 0);
CVPY_TYPE(xfeatures2d_HarrisLaplaceFeatureDetector, xfeatures2d_HarrisLaplaceFeatureDetector, Ptr<cv::xfeatures2d::HarrisLaplaceFeatureDetector>, Ptr, Feature2D, 0);
CVPY_TYPE(xfeatures2d_AffineFeature2D, xfeatures2d_AffineFeature2D, Ptr<cv::xfeatures2d::AffineFeature2D>, Ptr, Feature2D, 0);
CVPY_TYPE(xfeatures2d_TBMR, xfeatures2d_TBMR, Ptr<cv::xfeatures2d::TBMR>, Ptr, xfeatures2d_AffineFeature2D, 0);
CVPY_TYPE(cuda_SURF_CUDA, cuda_SURF_CUDA, Ptr<cv::cuda::SURF_CUDA>, Ptr, NoBase, 0);
CVPY_TYPE(xfeatures2d_SURF, xfeatures2d_SURF, Ptr<cv::xfeatures2d::SURF>, Ptr, Feature2D, 0);
CVPY_TYPE(ximgproc_DisparityFilter, ximgproc_DisparityFilter, Ptr<cv::ximgproc::DisparityFilter>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_DisparityWLSFilter, ximgproc_DisparityWLSFilter, Ptr<cv::ximgproc::DisparityWLSFilter>, Ptr, ximgproc_DisparityFilter, 0);
CVPY_TYPE(ximgproc_EdgeDrawing, ximgproc_EdgeDrawing, Ptr<cv::ximgproc::EdgeDrawing>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_EdgeDrawing_Params, ximgproc_EdgeDrawing_Params, cv::ximgproc::EdgeDrawing::Params, Params, NoBase, pyopencv_cv_ximgproc_ximgproc_EdgeDrawing_Params_EdgeDrawing_Params);
CVPY_TYPE(ximgproc_DTFilter, ximgproc_DTFilter, Ptr<cv::ximgproc::DTFilter>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_GuidedFilter, ximgproc_GuidedFilter, Ptr<cv::ximgproc::GuidedFilter>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_AdaptiveManifoldFilter, ximgproc_AdaptiveManifoldFilter, Ptr<cv::ximgproc::AdaptiveManifoldFilter>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_FastBilateralSolverFilter, ximgproc_FastBilateralSolverFilter, Ptr<cv::ximgproc::FastBilateralSolverFilter>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_FastGlobalSmootherFilter, ximgproc_FastGlobalSmootherFilter, Ptr<cv::ximgproc::FastGlobalSmootherFilter>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_EdgeBoxes, ximgproc_EdgeBoxes, Ptr<cv::ximgproc::EdgeBoxes>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_FastLineDetector, ximgproc_FastLineDetector, Ptr<cv::ximgproc::FastLineDetector>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_ContourFitting, ximgproc_ContourFitting, Ptr<cv::ximgproc::ContourFitting>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_SuperpixelLSC, ximgproc_SuperpixelLSC, Ptr<cv::ximgproc::SuperpixelLSC>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_RidgeDetectionFilter, ximgproc_RidgeDetectionFilter, Ptr<cv::ximgproc::RidgeDetectionFilter>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_SuperpixelSEEDS, ximgproc_SuperpixelSEEDS, Ptr<cv::ximgproc::SuperpixelSEEDS>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_segmentation_GraphSegmentation, ximgproc_segmentation_GraphSegmentation, Ptr<cv::ximgproc::segmentation::GraphSegmentation>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_segmentation_SelectiveSearchSegmentationStrategy, ximgproc_segmentation_SelectiveSearchSegmentationStrategy, Ptr<cv::ximgproc::segmentation::SelectiveSearchSegmentationStrategy>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_segmentation_SelectiveSearchSegmentationStrategyColor, ximgproc_segmentation_SelectiveSearchSegmentationStrategyColor, Ptr<cv::ximgproc::segmentation::SelectiveSearchSegmentationStrategyColor>, Ptr, ximgproc_segmentation_SelectiveSearchSegmentationStrategy, 0);
CVPY_TYPE(ximgproc_segmentation_SelectiveSearchSegmentationStrategySize, ximgproc_segmentation_SelectiveSearchSegmentationStrategySize, Ptr<cv::ximgproc::segmentation::SelectiveSearchSegmentationStrategySize>, Ptr, ximgproc_segmentation_SelectiveSearchSegmentationStrategy, 0);
CVPY_TYPE(ximgproc_segmentation_SelectiveSearchSegmentationStrategyTexture, ximgproc_segmentation_SelectiveSearchSegmentationStrategyTexture, Ptr<cv::ximgproc::segmentation::SelectiveSearchSegmentationStrategyTexture>, Ptr, ximgproc_segmentation_SelectiveSearchSegmentationStrategy, 0);
CVPY_TYPE(ximgproc_segmentation_SelectiveSearchSegmentationStrategyFill, ximgproc_segmentation_SelectiveSearchSegmentationStrategyFill, Ptr<cv::ximgproc::segmentation::SelectiveSearchSegmentationStrategyFill>, Ptr, ximgproc_segmentation_SelectiveSearchSegmentationStrategy, 0);
CVPY_TYPE(ximgproc_segmentation_SelectiveSearchSegmentationStrategyMultiple, ximgproc_segmentation_SelectiveSearchSegmentationStrategyMultiple, Ptr<cv::ximgproc::segmentation::SelectiveSearchSegmentationStrategyMultiple>, Ptr, ximgproc_segmentation_SelectiveSearchSegmentationStrategy, 0);
CVPY_TYPE(ximgproc_segmentation_SelectiveSearchSegmentation, ximgproc_segmentation_SelectiveSearchSegmentation, Ptr<cv::ximgproc::segmentation::SelectiveSearchSegmentation>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_SuperpixelSLIC, ximgproc_SuperpixelSLIC, Ptr<cv::ximgproc::SuperpixelSLIC>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_SparseMatchInterpolator, ximgproc_SparseMatchInterpolator, Ptr<cv::ximgproc::SparseMatchInterpolator>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_EdgeAwareInterpolator, ximgproc_EdgeAwareInterpolator, Ptr<cv::ximgproc::EdgeAwareInterpolator>, Ptr, ximgproc_SparseMatchInterpolator, 0);
CVPY_TYPE(ximgproc_RICInterpolator, ximgproc_RICInterpolator, Ptr<cv::ximgproc::RICInterpolator>, Ptr, ximgproc_SparseMatchInterpolator, 0);
CVPY_TYPE(ximgproc_RFFeatureGetter, ximgproc_RFFeatureGetter, Ptr<cv::ximgproc::RFFeatureGetter>, Ptr, Algorithm, 0);
CVPY_TYPE(ximgproc_StructuredEdgeDetection, ximgproc_StructuredEdgeDetection, Ptr<cv::ximgproc::StructuredEdgeDetection>, Ptr, Algorithm, 0);
CVPY_TYPE(aruco_DetectorParameters, aruco_DetectorParameters, Ptr<cv::aruco::DetectorParameters>, Ptr, NoBase, 0);
CVPY_TYPE(aruco_Board, aruco_Board, Ptr<cv::aruco::Board>, Ptr, NoBase, 0);
CVPY_TYPE(aruco_GridBoard, aruco_GridBoard, Ptr<cv::aruco::GridBoard>, Ptr, aruco_Board, 0);
CVPY_TYPE(aruco_CharucoBoard, aruco_CharucoBoard, Ptr<cv::aruco::CharucoBoard>, Ptr, aruco_Board, 0);
CVPY_TYPE(aruco_Dictionary, aruco_Dictionary, Ptr<cv::aruco::Dictionary>, Ptr, NoBase, 0);
CVPY_TYPE(bgsegm_BackgroundSubtractorMOG, bgsegm_BackgroundSubtractorMOG, Ptr<cv::bgsegm::BackgroundSubtractorMOG>, Ptr, BackgroundSubtractor, 0);
CVPY_TYPE(bgsegm_BackgroundSubtractorGMG, bgsegm_BackgroundSubtractorGMG, Ptr<cv::bgsegm::BackgroundSubtractorGMG>, Ptr, BackgroundSubtractor, 0);
CVPY_TYPE(bgsegm_BackgroundSubtractorCNT, bgsegm_BackgroundSubtractorCNT, Ptr<cv::bgsegm::BackgroundSubtractorCNT>, Ptr, BackgroundSubtractor, 0);
CVPY_TYPE(bgsegm_BackgroundSubtractorGSOC, bgsegm_BackgroundSubtractorGSOC, Ptr<cv::bgsegm::BackgroundSubtractorGSOC>, Ptr, BackgroundSubtractor, 0);
CVPY_TYPE(bgsegm_BackgroundSubtractorLSBP, bgsegm_BackgroundSubtractorLSBP, Ptr<cv::bgsegm::BackgroundSubtractorLSBP>, Ptr, BackgroundSubtractor, 0);
CVPY_TYPE(bgsegm_BackgroundSubtractorLSBPDesc, bgsegm_BackgroundSubtractorLSBPDesc, Ptr<cv::bgsegm::BackgroundSubtractorLSBPDesc>, Ptr, NoBase, 0);
CVPY_TYPE(bgsegm_SyntheticSequenceGenerator, bgsegm_SyntheticSequenceGenerator, Ptr<cv::bgsegm::SyntheticSequenceGenerator>, Ptr, Algorithm, pyopencv_cv_bgsegm_bgsegm_SyntheticSequenceGenerator_SyntheticSequenceGenerator);
CVPY_TYPE(bioinspired_Retina, bioinspired_Retina, Ptr<cv::bioinspired::Retina>, Ptr, Algorithm, 0);
CVPY_TYPE(bioinspired_RetinaFastToneMapping, bioinspired_RetinaFastToneMapping, Ptr<cv::bioinspired::RetinaFastToneMapping>, Ptr, Algorithm, 0);
CVPY_TYPE(bioinspired_TransientAreasSegmentationModule, bioinspired_TransientAreasSegmentationModule, Ptr<cv::bioinspired::TransientAreasSegmentationModule>, Ptr, Algorithm, 0);
CVPY_TYPE(dpm_DPMDetector, dpm_DPMDetector, Ptr<cv::dpm::DPMDetector>, Ptr, NoBase, 0);
CVPY_TYPE(dpm_DPMDetector_ObjectDetection, dpm_DPMDetector_ObjectDetection, Ptr<cv::dpm::DPMDetector::ObjectDetection>, Ptr, NoBase, 0);
CVPY_TYPE(face_FaceRecognizer, face_FaceRecognizer, Ptr<cv::face::FaceRecognizer>, Ptr, Algorithm, 0);
CVPY_TYPE(face_BIF, face_BIF, Ptr<cv::face::BIF>, Ptr, Algorithm, 0);
CVPY_TYPE(face_FacemarkKazemi, face_FacemarkKazemi, Ptr<cv::face::FacemarkKazemi>, Ptr, face_Facemark, 0);
CVPY_TYPE(face_Facemark, face_Facemark, Ptr<cv::face::Facemark>, Ptr, Algorithm, 0);
CVPY_TYPE(face_FacemarkAAM, face_FacemarkAAM, Ptr<cv::face::FacemarkAAM>, Ptr, face_FacemarkTrain, 0);
CVPY_TYPE(face_FacemarkLBF, face_FacemarkLBF, Ptr<cv::face::FacemarkLBF>, Ptr, face_FacemarkTrain, 0);
CVPY_TYPE(face_FacemarkTrain, face_FacemarkTrain, Ptr<cv::face::FacemarkTrain>, Ptr, face_Facemark, 0);
CVPY_TYPE(face_BasicFaceRecognizer, face_BasicFaceRecognizer, Ptr<cv::face::BasicFaceRecognizer>, Ptr, face_FaceRecognizer, 0);
CVPY_TYPE(face_EigenFaceRecognizer, face_EigenFaceRecognizer, Ptr<cv::face::EigenFaceRecognizer>, Ptr, face_BasicFaceRecognizer, 0);
CVPY_TYPE(face_FisherFaceRecognizer, face_FisherFaceRecognizer, Ptr<cv::face::FisherFaceRecognizer>, Ptr, face_BasicFaceRecognizer, 0);
CVPY_TYPE(face_LBPHFaceRecognizer, face_LBPHFaceRecognizer, Ptr<cv::face::LBPHFaceRecognizer>, Ptr, face_FaceRecognizer, 0);
CVPY_TYPE(face_MACE, face_MACE, Ptr<cv::face::MACE>, Ptr, Algorithm, 0);
CVPY_TYPE(face_PredictCollector, face_PredictCollector, Ptr<cv::face::PredictCollector>, Ptr, NoBase, 0);
CVPY_TYPE(face_StandardCollector, face_StandardCollector, Ptr<cv::face::StandardCollector>, Ptr, face_PredictCollector, 0);
CVPY_TYPE(GArrayDesc, GArrayDesc, cv::GArrayDesc, GArrayDesc, NoBase, 0);
CVPY_TYPE(GComputation, GComputation, Ptr<cv::GComputation>, Ptr, NoBase, pyopencv_cv_GComputation_GComputation);
CVPY_TYPE(GFrame, GFrame, cv::GFrame, GFrame, NoBase, pyopencv_cv_GFrame_GFrame);
CVPY_TYPE(gapi_GKernelPackage, gapi_GKernelPackage, cv::gapi::GKernelPackage, GKernelPackage, NoBase, 0);
CVPY_TYPE(GMat, GMat, cv::GMat, GMat, NoBase, pyopencv_cv_GMat_GMat);
CVPY_TYPE(GMatDesc, GMatDesc, cv::GMatDesc, GMatDesc, NoBase, pyopencv_cv_GMatDesc_GMatDesc);
CVPY_TYPE(GOpaqueDesc, GOpaqueDesc, cv::GOpaqueDesc, GOpaqueDesc, NoBase, 0);
CVPY_TYPE(GScalar, GScalar, cv::GScalar, GScalar, NoBase, pyopencv_cv_GScalar_GScalar);
CVPY_TYPE(GScalarDesc, GScalarDesc, cv::GScalarDesc, GScalarDesc, NoBase, 0);
CVPY_TYPE(GStreamingCompiled, GStreamingCompiled, cv::GStreamingCompiled, GStreamingCompiled, NoBase, pyopencv_cv_GStreamingCompiled_GStreamingCompiled);
CVPY_TYPE(gapi_GNetPackage, gapi_GNetPackage, cv::gapi::GNetPackage, GNetPackage, NoBase, pyopencv_cv_gapi_gapi_GNetPackage_GNetPackage);
CVPY_TYPE(gapi_ie_PyParams, gapi_ie_PyParams, cv::gapi::ie::PyParams, PyParams, NoBase, 0);
CVPY_TYPE(GOpaqueT, GOpaqueT, cv::GOpaqueT, GOpaqueT, NoBase, pyopencv_cv_GOpaqueT_GOpaqueT);
CVPY_TYPE(GArrayT, GArrayT, cv::GArrayT, GArrayT, NoBase, pyopencv_cv_GArrayT_GArrayT);
CVPY_TYPE(gapi_wip_GOutputs, gapi_wip_GOutputs, cv::gapi::wip::GOutputs, GOutputs, NoBase, 0);
CVPY_TYPE(GCompileArg, GCompileArg, cv::GCompileArg, GCompileArg, NoBase, 0);
CVPY_TYPE(GProtoArg, GProtoArg, cv::GProtoArg, GProtoArg, NoBase, 0);
CVPY_TYPE(GProtoInputArgs, GProtoInputArgs, cv::GProtoInputArgs, GProtoInputArgs, NoBase, 0);
CVPY_TYPE(GProtoOutputArgs, GProtoOutputArgs, cv::GProtoOutputArgs, GProtoOutputArgs, NoBase, 0);
CVPY_TYPE(GRunArg, GRunArg, cv::GRunArg, GRunArg, NoBase, 0);
CVPY_TYPE(GMetaArg, GMetaArg, cv::GMetaArg, GMetaArg, NoBase, 0);
CVPY_TYPE(GInferInputs, GInferInputs, cv::GInferInputs, GInferInputs, NoBase, pyopencv_cv_GInferInputs_GInferInputs);
CVPY_TYPE(GInferListInputs, GInferListInputs, cv::GInferListInputs, GInferListInputs, NoBase, pyopencv_cv_GInferListInputs_GInferListInputs);
CVPY_TYPE(GInferOutputs, GInferOutputs, cv::GInferOutputs, GInferOutputs, NoBase, pyopencv_cv_GInferOutputs_GInferOutputs);
CVPY_TYPE(GInferListOutputs, GInferListOutputs, cv::GInferListOutputs, GInferListOutputs, NoBase, pyopencv_cv_GInferListOutputs_GInferListOutputs);
CVPY_TYPE(detail_ExtractArgsCallback, detail_ExtractArgsCallback, cv::detail::ExtractArgsCallback, ExtractArgsCallback, NoBase, 0);
CVPY_TYPE(detail_ExtractMetaCallback, detail_ExtractMetaCallback, cv::detail::ExtractMetaCallback, ExtractMetaCallback, NoBase, 0);
CVPY_TYPE(gapi_wip_IStreamSource, gapi_wip_IStreamSource, Ptr<cv::gapi::wip::IStreamSource>, Ptr, NoBase, 0);
CVPY_TYPE(optflow_DualTVL1OpticalFlow, optflow_DualTVL1OpticalFlow, Ptr<cv::optflow::DualTVL1OpticalFlow>, Ptr, DenseOpticalFlow, 0);
CVPY_TYPE(optflow_PCAPrior, optflow_PCAPrior, Ptr<cv::optflow::PCAPrior>, Ptr, NoBase, 0);
CVPY_TYPE(optflow_OpticalFlowPCAFlow, optflow_OpticalFlowPCAFlow, Ptr<cv::optflow::OpticalFlowPCAFlow>, Ptr, DenseOpticalFlow, 0);
CVPY_TYPE(optflow_RLOFOpticalFlowParameter, optflow_RLOFOpticalFlowParameter, Ptr<cv::optflow::RLOFOpticalFlowParameter>, Ptr, NoBase, 0);
CVPY_TYPE(optflow_DenseRLOFOpticalFlow, optflow_DenseRLOFOpticalFlow, Ptr<cv::optflow::DenseRLOFOpticalFlow>, Ptr, DenseOpticalFlow, 0);
CVPY_TYPE(optflow_SparseRLOFOpticalFlow, optflow_SparseRLOFOpticalFlow, Ptr<cv::optflow::SparseRLOFOpticalFlow>, Ptr, SparseOpticalFlow, 0);
CVPY_TYPE(optflow_GPCPatchDescriptor, optflow_GPCPatchDescriptor, Ptr<cv::optflow::GPCPatchDescriptor>, Ptr, NoBase, 0);
CVPY_TYPE(optflow_GPCPatchSample, optflow_GPCPatchSample, Ptr<cv::optflow::GPCPatchSample>, Ptr, NoBase, 0);
CVPY_TYPE(optflow_GPCTrainingSamples, optflow_GPCTrainingSamples, Ptr<cv::optflow::GPCTrainingSamples>, Ptr, NoBase, 0);
CVPY_TYPE(optflow_GPCTree, optflow_GPCTree, Ptr<cv::optflow::GPCTree>, Ptr, Algorithm, 0);
CVPY_TYPE(optflow_GPCDetails, optflow_GPCDetails, Ptr<cv::optflow::GPCDetails>, Ptr, NoBase, 0);
CVPY_TYPE(sfm_libmv_CameraIntrinsicsOptions, sfm_libmv_CameraIntrinsicsOptions, cv::sfm::libmv_CameraIntrinsicsOptions, libmv_CameraIntrinsicsOptions, NoBase, pyopencv_cv_sfm_sfm_libmv_CameraIntrinsicsOptions_libmv_CameraIntrinsicsOptions);
CVPY_TYPE(sfm_libmv_ReconstructionOptions, sfm_libmv_ReconstructionOptions, cv::sfm::libmv_ReconstructionOptions, libmv_ReconstructionOptions, NoBase, pyopencv_cv_sfm_sfm_libmv_ReconstructionOptions_libmv_ReconstructionOptions);
CVPY_TYPE(sfm_BaseSFM, sfm_BaseSFM, Ptr<cv::sfm::BaseSFM>, Ptr, NoBase, 0);
CVPY_TYPE(sfm_SFMLibmvEuclideanReconstruction, sfm_SFMLibmvEuclideanReconstruction, Ptr<cv::sfm::SFMLibmvEuclideanReconstruction>, Ptr, sfm_BaseSFM, 0);
CVPY_TYPE(Stitcher, Stitcher, Ptr<cv::Stitcher>, Ptr, NoBase, 0);
CVPY_TYPE(detail_Blender, detail_Blender, Ptr<cv::detail::Blender>, Ptr, NoBase, 0);
CVPY_TYPE(detail_FeatherBlender, detail_FeatherBlender, Ptr<cv::detail::FeatherBlender>, Ptr, detail_Blender, pyopencv_cv_detail_detail_FeatherBlender_FeatherBlender);
CVPY_TYPE(detail_MultiBandBlender, detail_MultiBandBlender, Ptr<cv::detail::MultiBandBlender>, Ptr, detail_Blender, pyopencv_cv_detail_detail_MultiBandBlender_MultiBandBlender);
CVPY_TYPE(detail_CameraParams, detail_CameraParams, cv::detail::CameraParams, CameraParams, NoBase, 0);
CVPY_TYPE(detail_ExposureCompensator, detail_ExposureCompensator, Ptr<cv::detail::ExposureCompensator>, Ptr, NoBase, 0);
CVPY_TYPE(detail_NoExposureCompensator, detail_NoExposureCompensator, Ptr<cv::detail::NoExposureCompensator>, Ptr, detail_ExposureCompensator, 0);
CVPY_TYPE(detail_GainCompensator, detail_GainCompensator, Ptr<cv::detail::GainCompensator>, Ptr, detail_ExposureCompensator, pyopencv_cv_detail_detail_GainCompensator_GainCompensator);
CVPY_TYPE(detail_ChannelsCompensator, detail_ChannelsCompensator, Ptr<cv::detail::ChannelsCompensator>, Ptr, detail_ExposureCompensator, pyopencv_cv_detail_detail_ChannelsCompensator_ChannelsCompensator);
CVPY_TYPE(detail_BlocksCompensator, detail_BlocksCompensator, Ptr<cv::detail::BlocksCompensator>, Ptr, detail_ExposureCompensator, 0);
CVPY_TYPE(detail_BlocksGainCompensator, detail_BlocksGainCompensator, Ptr<cv::detail::BlocksGainCompensator>, Ptr, detail_BlocksCompensator, pyopencv_cv_detail_detail_BlocksGainCompensator_BlocksGainCompensator);
CVPY_TYPE(detail_BlocksChannelsCompensator, detail_BlocksChannelsCompensator, Ptr<cv::detail::BlocksChannelsCompensator>, Ptr, detail_BlocksCompensator, pyopencv_cv_detail_detail_BlocksChannelsCompensator_BlocksChannelsCompensator);
CVPY_TYPE(detail_ImageFeatures, detail_ImageFeatures, cv::detail::ImageFeatures, ImageFeatures, NoBase, 0);
CVPY_TYPE(detail_MatchesInfo, detail_MatchesInfo, cv::detail::MatchesInfo, MatchesInfo, NoBase, 0);
CVPY_TYPE(detail_FeaturesMatcher, detail_FeaturesMatcher, Ptr<cv::detail::FeaturesMatcher>, Ptr, NoBase, 0);
CVPY_TYPE(detail_BestOf2NearestMatcher, detail_BestOf2NearestMatcher, Ptr<cv::detail::BestOf2NearestMatcher>, Ptr, detail_FeaturesMatcher, pyopencv_cv_detail_detail_BestOf2NearestMatcher_BestOf2NearestMatcher);
CVPY_TYPE(detail_BestOf2NearestRangeMatcher, detail_BestOf2NearestRangeMatcher, Ptr<cv::detail::BestOf2NearestRangeMatcher>, Ptr, detail_BestOf2NearestMatcher, pyopencv_cv_detail_detail_BestOf2NearestRangeMatcher_BestOf2NearestRangeMatcher);
CVPY_TYPE(detail_AffineBestOf2NearestMatcher, detail_AffineBestOf2NearestMatcher, Ptr<cv::detail::AffineBestOf2NearestMatcher>, Ptr, detail_BestOf2NearestMatcher, pyopencv_cv_detail_detail_AffineBestOf2NearestMatcher_AffineBestOf2NearestMatcher);
CVPY_TYPE(detail_Estimator, detail_Estimator, Ptr<cv::detail::Estimator>, Ptr, NoBase, 0);
CVPY_TYPE(detail_HomographyBasedEstimator, detail_HomographyBasedEstimator, Ptr<cv::detail::HomographyBasedEstimator>, Ptr, detail_Estimator, pyopencv_cv_detail_detail_HomographyBasedEstimator_HomographyBasedEstimator);
CVPY_TYPE(detail_AffineBasedEstimator, detail_AffineBasedEstimator, Ptr<cv::detail::AffineBasedEstimator>, Ptr, detail_Estimator, pyopencv_cv_detail_detail_AffineBasedEstimator_AffineBasedEstimator);
CVPY_TYPE(detail_BundleAdjusterBase, detail_BundleAdjusterBase, Ptr<cv::detail::BundleAdjusterBase>, Ptr, detail_Estimator, 0);
CVPY_TYPE(detail_NoBundleAdjuster, detail_NoBundleAdjuster, Ptr<cv::detail::NoBundleAdjuster>, Ptr, detail_BundleAdjusterBase, pyopencv_cv_detail_detail_NoBundleAdjuster_NoBundleAdjuster);
CVPY_TYPE(detail_BundleAdjusterReproj, detail_BundleAdjusterReproj, Ptr<cv::detail::BundleAdjusterReproj>, Ptr, detail_BundleAdjusterBase, pyopencv_cv_detail_detail_BundleAdjusterReproj_BundleAdjusterReproj);
CVPY_TYPE(detail_BundleAdjusterRay, detail_BundleAdjusterRay, Ptr<cv::detail::BundleAdjusterRay>, Ptr, detail_BundleAdjusterBase, pyopencv_cv_detail_detail_BundleAdjusterRay_BundleAdjusterRay);
CVPY_TYPE(detail_BundleAdjusterAffine, detail_BundleAdjusterAffine, Ptr<cv::detail::BundleAdjusterAffine>, Ptr, detail_BundleAdjusterBase, pyopencv_cv_detail_detail_BundleAdjusterAffine_BundleAdjusterAffine);
CVPY_TYPE(detail_BundleAdjusterAffinePartial, detail_BundleAdjusterAffinePartial, Ptr<cv::detail::BundleAdjusterAffinePartial>, Ptr, detail_BundleAdjusterBase, pyopencv_cv_detail_detail_BundleAdjusterAffinePartial_BundleAdjusterAffinePartial);
CVPY_TYPE(detail_SeamFinder, detail_SeamFinder, Ptr<cv::detail::SeamFinder>, Ptr, NoBase, 0);
CVPY_TYPE(detail_NoSeamFinder, detail_NoSeamFinder, Ptr<cv::detail::NoSeamFinder>, Ptr, detail_SeamFinder, 0);
CVPY_TYPE(detail_PairwiseSeamFinder, detail_PairwiseSeamFinder, Ptr<cv::detail::PairwiseSeamFinder>, Ptr, detail_SeamFinder, 0);
CVPY_TYPE(detail_VoronoiSeamFinder, detail_VoronoiSeamFinder, Ptr<cv::detail::VoronoiSeamFinder>, Ptr, detail_PairwiseSeamFinder, 0);
CVPY_TYPE(detail_DpSeamFinder, detail_DpSeamFinder, Ptr<cv::detail::DpSeamFinder>, Ptr, detail_SeamFinder, pyopencv_cv_detail_detail_DpSeamFinder_DpSeamFinder);
CVPY_TYPE(detail_GraphCutSeamFinder, detail_GraphCutSeamFinder, Ptr<cv::detail::GraphCutSeamFinder>, Ptr, NoBase, pyopencv_cv_detail_detail_GraphCutSeamFinder_GraphCutSeamFinder);
CVPY_TYPE(detail_Timelapser, detail_Timelapser, Ptr<cv::detail::Timelapser>, Ptr, NoBase, 0);
CVPY_TYPE(detail_TimelapserCrop, detail_TimelapserCrop, Ptr<cv::detail::TimelapserCrop>, Ptr, detail_Timelapser, 0);
CVPY_TYPE(detail_ProjectorBase, detail_ProjectorBase, cv::detail::ProjectorBase, ProjectorBase, NoBase, 0);
CVPY_TYPE(detail_SphericalProjector, detail_SphericalProjector, cv::detail::SphericalProjector, SphericalProjector, detail_ProjectorBase, 0);
CVPY_TYPE(PyRotationWarper, PyRotationWarper, Ptr<cv::PyRotationWarper>, Ptr, NoBase, pyopencv_cv_PyRotationWarper_PyRotationWarper);
CVPY_TYPE(WarperCreator, WarperCreator, Ptr<cv::WarperCreator>, Ptr, NoBase, 0);
CVPY_TYPE(TrackerCSRT, TrackerCSRT, Ptr<cv::TrackerCSRT>, Ptr, Tracker, 0);
CVPY_TYPE(TrackerCSRT_Params, TrackerCSRT_Params, cv::TrackerCSRT::Params, Params, NoBase, pyopencv_cv_TrackerCSRT_Params_TrackerCSRT_Params);
CVPY_TYPE(TrackerKCF, TrackerKCF, Ptr<cv::TrackerKCF>, Ptr, Tracker, 0);
CVPY_TYPE(TrackerKCF_Params, TrackerKCF_Params, cv::TrackerKCF::Params, Params, NoBase, pyopencv_cv_TrackerKCF_Params_TrackerKCF_Params);
CVPY_TYPE(legacy_Tracker, legacy_Tracker, Ptr<cv::legacy::Tracker>, Ptr, Algorithm, 0);
CVPY_TYPE(legacy_TrackerMIL, legacy_TrackerMIL, Ptr<cv::legacy::TrackerMIL>, Ptr, legacy_Tracker, 0);
CVPY_TYPE(legacy_TrackerBoosting, legacy_TrackerBoosting, Ptr<cv::legacy::TrackerBoosting>, Ptr, legacy_Tracker, 0);
CVPY_TYPE(legacy_TrackerMedianFlow, legacy_TrackerMedianFlow, Ptr<cv::legacy::TrackerMedianFlow>, Ptr, legacy_Tracker, 0);
CVPY_TYPE(legacy_TrackerTLD, legacy_TrackerTLD, Ptr<cv::legacy::TrackerTLD>, Ptr, legacy_Tracker, 0);
CVPY_TYPE(legacy_TrackerKCF, legacy_TrackerKCF, Ptr<cv::legacy::TrackerKCF>, Ptr, legacy_Tracker, 0);
CVPY_TYPE(legacy_TrackerMOSSE, legacy_TrackerMOSSE, Ptr<cv::legacy::TrackerMOSSE>, Ptr, legacy_Tracker, 0);
CVPY_TYPE(legacy_MultiTracker, legacy_MultiTracker, Ptr<cv::legacy::MultiTracker>, Ptr, Algorithm, pyopencv_cv_legacy_legacy_MultiTracker_MultiTracker);
CVPY_TYPE(legacy_TrackerCSRT, legacy_TrackerCSRT, Ptr<cv::legacy::TrackerCSRT>, Ptr, legacy_Tracker, 0);
CVPY_TYPE(stereo_MatchQuasiDense, stereo_MatchQuasiDense, cv::stereo::MatchQuasiDense, MatchQuasiDense, NoBase, pyopencv_cv_stereo_stereo_MatchQuasiDense_MatchQuasiDense);
CVPY_TYPE(stereo_PropagationParameters, stereo_PropagationParameters, cv::stereo::PropagationParameters, PropagationParameters, NoBase, 0);
CVPY_TYPE(stereo_QuasiDenseStereo, stereo_QuasiDenseStereo, Ptr<cv::stereo::QuasiDenseStereo>, Ptr, NoBase, 0);
